1. crear la app python manage.py startapp name
2. añadirla al settings.py
3. Crear el modelo
4. Agragar la app al archivo de urls.py general (core)
5. Añadir la app al admin de la misma
6. Crear el archivo de urls.py añadiendo el path, vista y name 
7. Añadir la vista
8. Añadir el template

## Creación de entorno virtual

python -m venv venv

## Activación del entorno virtual:

. venv/Scripts/activate

## Instalación de Django en el venv:

pip install Django

## Crear el archivo de instalación de paquetes:

pip freeze ---> muestra los paquetes que están instalados en el entorno actual

pip freeze > requirements.txt

## Instalar paquetes: 

pip install -r requierements.txt

## Crear proyecto en Django:

django-admin startproject [name] .

## Crear y configurar la DB con la que va a trabajar Django

python manage.py migrate

## Levantar el proyecto:

python manage.py runserver

## Desactivar el entorno virtual

deactivate

## Crear una primera aplicación con vistas en el proyecto

python manage.py startapp [name]

## Agregar aplicación a las isntaladas:

Dentro de settings.py, buscar INSTALLED_APPS y adregarla:

INSTALLED_APPS = [
...
'[app_name]'
]

## Configurar carpeta de templates para trabajar con loader:

Dentro del archivo settings.py, buscar TEMPLATES y en 'DIRS':

'DIRS': [BASE_DIR / 'templates'],

## Crear el archivo de config entre la base de datos y la aplicación (intermediario):

python manage.py makemigrations

## Mostrar los cambios en la DB:

python manage.py migrate


# Usuarios

## Crear super usuario

python manage.py createsuperuser